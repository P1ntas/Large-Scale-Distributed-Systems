{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauro\\\\OneDrive\\\\Ambiente de Trabalho\\\\SDLE-PROJ\\\\src\\\\components\\\\ShoppingList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport localForage from 'localforage';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShoppingList = ({\n  username\n}) => {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [newListName, setNewListName] = useState('');\n  useEffect(() => {\n    const loadLists = async () => {\n      const data = await localForage.getItem(username);\n      if (data && data.shopping_lists) {\n        setLists(data.shopping_lists);\n      }\n    };\n    if (username) {\n      loadLists();\n    }\n  }, [username]);\n  useEffect(() => {\n    const loadLists = async () => {\n      const data = await localForage.getItem(username);\n      if (data && data.shopping_lists) {\n        setLists(data.shopping_lists.map(list => list.list_name));\n      }\n    };\n    loadLists();\n  }, [username]);\n  const updateStorage = async updatedLists => {\n    const data = await localForage.getItem(username);\n    await localForage.setItem(username, {\n      ...data,\n      shopping_lists: updatedLists\n    });\n  };\n  const createList = async () => {\n    if (newListName && !lists.some(list => list.list_name === newListName)) {\n      const newList = {\n        list_name: newListName,\n        last_edited: new Date().toISOString(),\n        products: []\n      };\n      const updatedLists = [...lists, newList];\n      setLists(updatedLists);\n      setNewListName('');\n      await updateStorage(updatedLists);\n    }\n  };\n  const deleteList = async name => {\n    const updatedLists = lists.filter(list => list.list_name !== name);\n    setLists(updatedLists);\n    await updateStorage(updatedLists);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [username, \"'s Shopping Lists\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newListName,\n      onChange: e => setNewListName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createList,\n      children: \"Create List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: lists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/list/${list.list_name}?username=${encodeURIComponent(username)}`,\n          children: list.list_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteList(list.list_name),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, list.list_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ShoppingList, \"7Y9Sg3VnkeJWp3MWjFUNyCRqxAA=\");\n_c = ShoppingList;\nexport default ShoppingList;\nvar _c;\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"names":["React","useState","useEffect","localForage","Link","jsxDEV","_jsxDEV","ShoppingList","username","_s","lists","setLists","newListName","setNewListName","loadLists","data","getItem","shopping_lists","map","list","list_name","updateStorage","updatedLists","setItem","createList","some","newList","last_edited","Date","toISOString","products","deleteList","name","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","to","encodeURIComponent","_c","$RefreshReg$"],"sources":["C:/Users/sauro/OneDrive/Ambiente de Trabalho/SDLE-PROJ/src/components/ShoppingList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport localForage from 'localforage';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ShoppingList = ({ username }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [newListName, setNewListName] = useState('');\r\n\r\n  useEffect(() => {\r\n    const loadLists = async () => {\r\n      const data = await localForage.getItem(username);\r\n      if (data && data.shopping_lists) {\r\n        setLists(data.shopping_lists);\r\n      }\r\n    };\r\n  \r\n    if (username) {\r\n      loadLists();\r\n    }\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    const loadLists = async () => {\r\n      const data = await localForage.getItem(username);\r\n      if (data && data.shopping_lists) {\r\n        setLists(data.shopping_lists.map(list => list.list_name));\r\n      }\r\n    };\r\n  \r\n    loadLists();\r\n  }, [username]);\r\n\r\n  const updateStorage = async (updatedLists) => {\r\n    const data = await localForage.getItem(username);\r\n    await localForage.setItem(username, { ...data, shopping_lists: updatedLists });\r\n  };\r\n  \r\n  const createList = async () => {\r\n    if (newListName && !lists.some(list => list.list_name === newListName)) {\r\n      const newList = {\r\n        list_name: newListName,\r\n        last_edited: new Date().toISOString(),\r\n        products: []\r\n      };\r\n      const updatedLists = [...lists, newList];\r\n      setLists(updatedLists);\r\n      setNewListName('');\r\n      await updateStorage(updatedLists);\r\n    }\r\n  };\r\n  \r\n  const deleteList = async (name) => {\r\n    const updatedLists = lists.filter(list => list.list_name !== name);\r\n    setLists(updatedLists);\r\n    await updateStorage(updatedLists);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{username}'s Shopping Lists</h1>\r\n      <input type=\"text\" value={newListName} onChange={(e) => setNewListName(e.target.value)} />\r\n      <button onClick={createList}>Create List</button>\r\n      <ul>\r\n        {lists.map(list => (\r\n          <li key={list.list_name}>\r\n            <Link to={`/list/${list.list_name}?username=${encodeURIComponent(username)}`}>\r\n              {list.list_name}\r\n            </Link>\r\n            <button onClick={() => deleteList(list.list_name)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShoppingList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}