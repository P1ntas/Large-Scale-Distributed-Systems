{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauro\\\\OneDrive\\\\Ambiente de Trabalho\\\\SDLE-PROJ\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generateRandomString = () => Math.random().toString(36).substr(2, 9);\nfunction App() {\n  _s();\n  const [userId, setUserId] = useState(generateRandomString()); // Generate a unique ID for the user\n  const [shoppingLists, setShoppingLists] = useState([]);\n  const addNewList = () => {\n    const newList = {\n      id: generateRandomString(),\n      name: generateRandomString(),\n      items: []\n    };\n    setShoppingLists([...shoppingLists, newList]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewList,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), shoppingLists.map(list => /*#__PURE__*/_jsxDEV(ShoppingList, {\n      list: list,\n      setShoppingLists: setShoppingLists,\n      userId: userId\n    }, list.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hd6+ewGVQW7/CvY5CSFDIl/5I1A=\");\n_c = App;\nfunction ShoppingList({\n  list,\n  setShoppingLists\n}) {\n  _s2();\n  const [newItem, setNewItem] = useState('');\n  const [editItemIndex, setEditItemIndex] = useState(null);\n  const [editedValue, setEditedValue] = useState('');\n  const addItem = () => {\n    if (newItem) {\n      list.items.push(newItem);\n      setNewItem('');\n      updateList(list);\n    }\n  };\n  const editItem = index => {\n    setEditItemIndex(index);\n    setEditedValue(list.items[index]);\n  };\n  const updateItem = () => {\n    if (editedValue) {\n      list.items[editItemIndex] = editedValue;\n      setEditItemIndex(null);\n      setEditedValue('');\n      updateList(list);\n    }\n  };\n  const deleteItem = index => {\n    list.items.splice(index, 1);\n    updateList(list);\n  };\n  const deleteList = id => {\n    setShoppingLists(prevLists => prevLists.filter(list => list.id !== id));\n  };\n  const updateList = updatedList => {\n    setShoppingLists(prevLists => prevLists.map(list => list.id === updatedList.id ? updatedList : list));\n\n    // Assuming you have a state for the userId\n    axios.post(`http://localhost:3001/lists/${userId}`, shoppingLists).then(response => console.log(response.data)).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: list.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteList(list.id),\n      children: \"Delete List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newItem,\n      onChange: e => setNewItem(e.target.value),\n      placeholder: \"New Item...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: editItemIndex === index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: editedValue,\n            onChange: e => setEditedValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateItem,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [item, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editItem(index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteItem(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s2(ShoppingList, \"3uWwdrStcl2KS/IJ1iMAFvKS9NA=\");\n_c2 = ShoppingList;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ShoppingList\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","generateRandomString","Math","random","toString","substr","App","_s","userId","setUserId","shoppingLists","setShoppingLists","addNewList","newList","id","name","items","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","list","ShoppingList","_c","_s2","newItem","setNewItem","editItemIndex","setEditItemIndex","editedValue","setEditedValue","addItem","push","updateList","editItem","index","updateItem","deleteItem","splice","deleteList","prevLists","filter","updatedList","post","then","response","console","log","data","catch","error","value","onChange","e","target","placeholder","item","_c2","$RefreshReg$"],"sources":["C:/Users/sauro/OneDrive/Ambiente de Trabalho/SDLE-PROJ/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\n\r\nconst generateRandomString = () => Math.random().toString(36).substr(2, 9);\r\n\r\nfunction App() {\r\n  const [userId, setUserId] = useState(generateRandomString()); // Generate a unique ID for the user\r\n  const [shoppingLists, setShoppingLists] = useState([]);\r\n\r\n\r\n  const addNewList = () => {\r\n    const newList = {\r\n      id: generateRandomString(),\r\n      name: generateRandomString(),\r\n      items: [],\r\n    };\r\n    setShoppingLists([...shoppingLists, newList]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button onClick={addNewList}>+</button>\r\n      {shoppingLists.map(list => (\r\n  <ShoppingList key={list.id} list={list} setShoppingLists={setShoppingLists} userId={userId} />\r\n))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ShoppingList({ list, setShoppingLists }) {\r\n  const [newItem, setNewItem] = useState('');\r\n  const [editItemIndex, setEditItemIndex] = useState(null);\r\n  const [editedValue, setEditedValue] = useState('');\r\n\r\n  const addItem = () => {\r\n    if (newItem) {\r\n      list.items.push(newItem);\r\n      setNewItem('');\r\n      updateList(list);\r\n    }\r\n  };\r\n\r\n  const editItem = (index) => {\r\n    setEditItemIndex(index);\r\n    setEditedValue(list.items[index]);\r\n  };\r\n\r\n  const updateItem = () => {\r\n    if (editedValue) {\r\n      list.items[editItemIndex] = editedValue;\r\n      setEditItemIndex(null);\r\n      setEditedValue('');\r\n      updateList(list);\r\n    }\r\n  };\r\n\r\n  const deleteItem = (index) => {\r\n    list.items.splice(index, 1);\r\n    updateList(list);\r\n  };\r\n\r\n  const deleteList = (id) => {\r\n    setShoppingLists(prevLists => prevLists.filter(list => list.id !== id));\r\n  };\r\n\r\n  const updateList = (updatedList) => {\r\n    setShoppingLists(prevLists => prevLists.map(list => (list.id === updatedList.id ? updatedList : list)));\r\n  \r\n    // Assuming you have a state for the userId\r\n    axios.post(`http://localhost:3001/lists/${userId}`, shoppingLists)\r\n      .then(response => console.log(response.data))\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      <h3>{list.name}</h3>\r\n      <button onClick={() => deleteList(list.id)}>Delete List</button>\r\n\r\n      <input \r\n        value={newItem}\r\n        onChange={(e) => setNewItem(e.target.value)}\r\n        placeholder=\"New Item...\"\r\n      />\r\n      <button onClick={addItem}>Add Item</button>\r\n\r\n      <ul>\r\n        {list.items.map((item, index) => (\r\n          <li key={index}>\r\n            {editItemIndex === index ? (\r\n              <>\r\n                <input value={editedValue} onChange={(e) => setEditedValue(e.target.value)} />\r\n                <button onClick={updateItem}>Save</button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {item} \r\n                <button onClick={() => editItem(index)}>Edit</button>\r\n                <button onClick={() => deleteItem(index)}>Delete</button>\r\n              </>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}